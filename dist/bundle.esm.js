import{Component as e,h as t,fixOptions as r,makeMap as o,isUndef as n}from"suika";class s extends e{render(){return t("div",{},t("h1",{},"404"),t("p",{},`Page ${this.attrs.currentRoute} not found.`))}}class i extends e{router;constructor(){super(),this.router=null}_setAttrs(e){this.attrs=e,e.router&&(this.router=e.router)}changeHandler(e){this._update()}onMounted(){window.addEventListener("popstate",this.changeHandler.bind(this))}beforeUnmount(){window.removeEventListener("popstate",this.changeHandler.bind(this))}render(){let e,r;if(this.router){const t=this.router.getFragment();r=this.router.getHandler(t),e=this.router.current}else r=s;return t(r,{currentRoute:e})}}const a=(e="",t="hash")=>{"history"===t?window.history.pushState(null,"",e):window.location.href=`${window.location.href.replace(/#(.*)$/,"")}#${e}`},h=(e,o)=>{const n=r(e,{onclick:t=>{t.preventDefault(),a(e.to||"/")}});return t("a",n,...o)},u=o("history,pushstate");class c{routes;mode;current;constructor(e){this.routes=e.routes,this.mode=e.mode||"hash",this.current=this.getFragment()}getFragment(){let e="";if("history"===this.mode)e=decodeURI(window.location.pathname+window.location.search),e=e.replace(/\?(.*)$/,"");else{const t=window.location.href.match(/#(.*)$/);e=t?t[1]:"/"}return e}getHandler(e=""){const t=this.routes.find((t=>t.regex?.test(e)));return t&&t.component?t.component:s}navigate(e=""){a(e,this.mode)}}const d=e=>(!n(e.mode)&&u(e.mode)||(e.mode="hash"),Array.isArray(e.routes)&&(e.routes=e.routes.map((e=>{var t;return e.regex=(t=e.path,new RegExp(`^${t.replace(/\//g,"\\/").replace(/:\w+/g,"(.+)")}$`)),e}))),new c(e));export{h as RouterLink,i as RouterView,d as createRouter,a as navigate};
